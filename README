RDF::Trine - An RDF Framework for Perl.

   RDF::Trine provides an RDF framework with an emphasis on extensibility, API
   stability, and the presence of a test suite. The package consists of several
   components:

   * RDF::Trine::Model - RDF model providing access to a triple store.
   * RDF::Trine::Parser - Native RDF parsers (currently for Turtle only).
   * RDF::Trine::Store::DBI - A triple store for MySQL and SQLite, based on the
     Redland schema.
   * RDF::Trine::Iterator - Iterator classes for variable bindings and RDF
     statements, used by RDF::Trine::Store, RDF::Trine::Model, and RDF::Query.
   * RDF::Trine::Namespace - A convenience class for easily constructing RDF
     node objects from URI namespaces.

REQUIREMENTS

	To install RDF::Trine you'll need the following perl modules installed:

     * DBI
     * DBD::SQLite
     * Digest::MD5
     * Error
     * JSON
     * LWP::UserAgent
     * List::MoreUtils
     * List::Util
     * Scalar::Util
     * Unicode::Escape
     * URI
     * XML::CommonNS
     * XML::Namespace
     * XML::Twig

	The following additional modules are optional:

     * DBD::Mysql
     * Test::More
     * Test::JSON
     * Test::Exception

INSTALLATION

   To install, run:

   perl Makefile.PL
   make
   make test
   make install

VERSION HISTORY

  Version 0.103 (2008-03-10)

     * Updated to recognize (renamed) RDF::Query::Expression class.

  Version 0.102 (2008-03-07)

     * Added length() method to Materialized bindings iterator class.
     * Removed bloom filter construction from bindings iterator (RDF::Query code now does this itself).
     * Fixed escaping of backslashes in Literal node serialization.

  Version 0.101 (2008-03-04)

     * Added an RDF/XML parser based on RDF::Core::Parser.
     * Added Bloom filter support for Materialized bindings iterators.
     * Fixed IRI workaround using the URI module.
     * Turtle parser now uses Data::UUID for unique names.
     * Fixed turtle parser bug for Verb testing.
     * Added RDF::Trine::Statement::Quad::from_redland method.
     * DBI store now constrains variable node types based on position in a statement.
     * Added support for BOUND(), ISLITERAL(), ISURI() and ISIRI() functions in DBI store.

  Version 0.100 (2008-02-18)

     * Initial public release.

COPYRIGHT

   Copyright (C) 2008 Gregory Williams. All rights reserved.
   This program is free software; you can redistribute it and/or
   modify it under the same terms as Perl itself.

AUTHOR

	Gregory Williams <gwilliams@cpan.org>

